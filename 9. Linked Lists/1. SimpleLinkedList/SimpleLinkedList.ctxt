#BlueJ class context
comment0.params=value\ next
comment0.target=SimpleListNode(java.lang.Object,\ SimpleListNode)
comment0.text=\r\n\ \ \ \ construct\ a\ new\ list\ object\r\n\r\n\ \ \ \ @param\ value\ value\ to\ be\ stored\ in\ this\ list\ node\r\n\ \ \ \ @param\ next\ reference\ to\ next\ node\ in\ the\ list\r\n
comment1.params=
comment1.target=java.lang.Object\ value()
comment1.text=\r\n\ \ \ \ get\ data\ value\ from\ this\ list\ object\r\n\r\n\ \ \ \ @return\ data\ object\ stored\r\n
comment10.params=obj
comment10.target=boolean\ contains(java.lang.Object)
comment10.text=\r\n\ \ \ \ search\ for\ an\ item\ in\ the\ list,\ return\ whether\ it\ is\ found\r\n\r\n\ \ \ \ @param\ obj\ object\ to\ search\ for\ in\ list\r\n\ \ \ \ @return\ true\ if\ the\ item\ is\ found\r\n\ \ \ \ @return\ false\ if\ the\ items\ is\ not\ in\ the\ list\r\n
comment11.params=
comment11.target=int\ size()
comment11.text=\r\n\ \ \ \ return\ the\ number\ of\ elements\ in\ the\ list\r\n\r\n\ \ \ \ @return\ the\ number\ of\ elements\ in\ the\ list\r\n
comment12.params=pos
comment12.target=java.lang.Object\ remove(int)
comment12.text=\r\n\ \ \ \ remove\ an\ item\ from\ the\ list,\ by\ position\r\n\r\n\ \ \ \ @param\ pos\ the\ position\ whose\ element\ is\ to\ be\ removed\r\n\ \ \ \ @return\ the\ object\ removed\r\n
comment13.params=
comment13.target=void\ clear()
comment13.text=\r\n\ \ \ \ remove\ all\ items\ from\ the\ list\r\n\r\n\ \ \ \ @post\ all\ items\ are\ removed\ from\ the\ list\r\n
comment14.params=
comment14.target=java.util.Iterator\ iterator()
comment14.text=\r\n\ \ \ \ create\ iterator\ for\ the\ list\r\n\r\n\ \ \ \ @return\ iterator\ over\ SimpleLinkedList\r\n
comment15.params=
comment15.target=java.lang.String\ toString()
comment15.text=\r\n\ \ \ \ generate\ a\ string\ representation\ of\ a\ linked\ list\ \r\n\r\n\ \ \ \ @return\ a\ representation\ of\ the\ list\ items\ as\ a\ String\r\n
comment16.params=args
comment16.target=void\ main(java.lang.String[])
comment2.params=
comment2.target=SimpleListNode\ next()
comment2.text=\r\n\ \ \ \ get\ next\ reference\ from\ this\ list\ object\r\n\r\n\ \ \ \ @return\ reference\ to\ next\ list\ object\r\n\ \ \ \ @return\ null\ if\ this\ is\ the\ last\ object\ in\ the\ list\r\n
comment3.params=value
comment3.target=java.lang.Object\ setValue(java.lang.Object)
comment3.text=\r\n\ \ \ \ set\ the\ data\ value\ of\ this\ object\ to\ a\ new\ value.\ \ Old\ value\ is\ returned\r\n\r\n\ \ \ \ @param\ value\ new\ data\ value\ to\ be\ stored\r\n\ \ \ \ @return\ old\ stored\ data\ value\r\n
comment4.params=next
comment4.target=SimpleListNode\ setNext(SimpleListNode)
comment4.text=\r\n\ \ \ \ set\ the\ next\ reference\ of\ this\ object\ to\ a\ new\ value.\ \ \r\n\ \ \ \ Old\ next\ reference\ is\ returned\r\n\r\n\ \ \ \ @param\ next\ new\ next\ reference\ to\ be\ stored\r\n\ \ \ \ @return\ old\ stored\ next\ reference\r\n
comment5.params=
comment5.target=SimpleLinkedList()
comment5.text=\r\n\ \ \ \ construct\ a\ new,\ empty\ list\r\n
comment6.params=pos\ obj
comment6.target=void\ add(int,\ java.lang.Object)
comment6.text=\r\n\ \ \ \ add\ a\ new\ item\ as\ the\ pos'th\ object\ in\ the\ list\r\n\r\n\ \ \ \ @param\ pos\ desired\ position\ of\ the\ object\ in\ the\ list\r\n\ \ \ \ @param\ obj\ data\ object\ to\ insert\r\n\ \ \ \ @pre\ the\ list\ must\ have\ between\ 0\ and\ pos-1\ entries\r\n\ \ \ \ @post\ the\ list\ is\ modified\ to\ have\ obj\ at\ position\ pos,\ subseqent\ items\ slide\ down\r\n
comment7.params=obj
comment7.target=void\ add(java.lang.Object)
comment7.text=\r\n\ \ \ \ add\ at\ 0\ is\ the\ default\ kind\ of\ add,\ and\ it\ simply\ calls\ the\r\n\ \ \ \ general\ purpose\ add\r\n\r\n\ \ \ \ @param\ the\ item\ to\ be\ added\ to\ the\ start\ of\ the\ list\r\n
comment8.params=pos
comment8.target=java.lang.Object\ get(int)
comment8.text=\r\n\ \ \ \ retrieve\ an\ item\ in\ the\ list\r\n\r\n\ \ \ \ @param\ pos\ position\ at\ which\ to\ find\ the\ element\r\n\ \ \ \ @pre\ the\ list\ has\ at\ least\ pos+1\ elements\r\n\ \ \ \ @return\ the\ item\ at\ position\ pos\r\n
comment9.params=pos\ obj
comment9.target=java.lang.Object\ set(int,\ java.lang.Object)
comment9.text=\r\n\ \ \ \ set\ an\ item\ in\ the\ list\ by\ position\r\n\r\n\ \ \ \ @param\ pos\ position\ at\ which\ to\ replace\ an\ element\r\n\ \ \ \ @pre\ the\ list\ has\ at\ least\ pos+1\ elements\r\n\ \ \ \ @return\ the\ previous\ item\ at\ position\ pos\r\n
numComments=17
